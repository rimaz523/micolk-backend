# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
    branches:
        include:
            - master
            - develop
            - releases/*

variables:
- group: DevDeploymentVarGroup

stages:
    - stage: 'Build'
      displayName: 'Build the backend REST api'
      jobs:
          - job: 'Build'
            displayName: 'Build job'
            pool:
                vmImage: '$(buildVmImage)'

            steps:
                - task: UseDotNet@2
                  inputs:
                    version: '5.0.x'
                    includePreviewVersions: true # Required for preview versions
                
                - task: DotNetCoreCLI@2
                  displayName: Restore
                  inputs:
                    command: 'restore'
                    projects: '**/*.csproj'
                    includeNuGetOrg: true

                - task: DotNetCoreCLI@2
                  displayName: Build
                  inputs:
                    command: build
                    projects: '**/*.csproj'
                    arguments: '--no-restore --configuration $(buildConfiguration)'

                - task: DotNetCoreCLI@2
                  displayName: Publish
                  inputs:
                    command: publish
                    publishWebProjects: false
                    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
                    zipAfterPublish: true

                - task: PublishBuildArtifacts@1
                  displayName: 'Publish Artifact: drop'
                  condition: succeeded()

                - task: PublishBuildArtifacts@1
                  displayName: 'Publish Artifact: drop'
                  inputs:
                      pathtoPublish: 'ArmTemplates'

    - stage: 'Deploy'
      displayName: 'Deploy the backend REST api'
      dependsOn: Build
      condition: and (succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))
      jobs:
          - deployment: Deploy
            pool: 'MyAgentPool'
            environment: Development
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - download: current
                              artifact: drop
                            
                            - task: AzureResourceManagerTemplateDeployment@3
                              displayName: Create a storage account for deployment artifacts
                              inputs:
                                deploymentScope: 'Resource Group'
                                azureResourceManagerConnection: '$(managedIdentityName)'
                                subscriptionId: '$(subscriptionId)'
                                action: 'Create Or Update Resource Group'
                                resourceGroupName: '$(resourceGroupName)'
                                location: '$(resourceGroupLocation)'
                                templateLocation: 'Linked artifact'
                                csmFile: '$(Pipeline.Workspace)/drop/infrastructure/storage/azuredeploy.json'
                                deploymentMode: 'Incremental'
                                deploymentOutputs: 'armOutputs'

                            - task: AzurePowerShell@4
                              displayName: Get the storage account and its container names
                              inputs:
                                azureSubscription: $(managedIdentityName)
                                scriptType: 'InlineScript'
                                Inline: |
                                  $var=ConvertFrom-Json '$(armOutputs)'
                                  $value=$var.storageAccountName.value
                                  Write-Host "##vso[task.setvariable variable=storageAccountName;]$value"
                                  $value=$var.storageContainerName.value
                                  Write-Host "##vso[task.setvariable variable=storageContainerName;]$value"
                                azurePowerShellVersion: 'latestVersion'
                                pwsh: true

                            - task: AzureFileCopy@3
                              displayName: Copy deployment artifacts to the storage account
                              inputs:
                                sourcePath: '$(Pipeline.Workspace)/drop/infrastructure'
                                azureSubscription: $(managedIdentityName)
                                destination: azureBlob
                                storage: $(storageAccountName)
                                containerName: $(storageContainerName)
                                blobPrefix: 'linked-templates'
                                cleanTargetBeforeCopy: true
                                outputStorageUri: artifactsLocation
                                outputStorageContainerSasToken: artifactsLocationSasToken
                                sasTokenTimeOutInMinutes: 30

                            - task: AzureResourceManagerTemplateDeployment@3
                              inputs:
                                deploymentScope: 'Resource Group'
                                azureResourceManagerConnection: '$(managedIdentityName)'
                                subscriptionId: '$(subscriptionId)'
                                action: 'Create Or Update Resource Group'
                                resourceGroupName: '$(resourceGroupName)'
                                location: '$(resourceGroupLocation)'
                                templateLocation: 'Linked artifact'
                                csmFile: '$(Pipeline.Workspace)/drop/azuredeploy.json'
                                csmParametersFile: '$(Pipeline.Workspace)/drop/azuredeploy.parameters.json'
                                overrideParameters: -webAppDomain $(appName) -apiAppSuffix $(backendApiSuffix) -environment $(environment) -sku $(appSku) -dotnetVersion $(backendApiDotnetVersion) -artifactsLocation $(artifactsLocation) -artifactsLocationSasToken $(artifactsLocationSasToken)
                                deploymentMode: 'Incremental'
                                deploymentOutputs: 'armOutputs'

                            - task: AzureWebApp@1
                              displayName: 'Azure App Service Deploy: .net core 5 api'
                              inputs:
                                  azureSubscription: '$(managedIdentityName)'
                                  appName: '$(appName)-$(backendApiSuffix)-$(environment)'
                                  appType: 'webApp'
                                  package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
